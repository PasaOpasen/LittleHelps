) %>% tbl_df()
colnames(data)=c("Date","RM","MRM","Count","Action","Sex","Experience","Age","Weight","Height","BodyType","Mail")
data %<>%#filter(Count<=20) %>%
arrange(MRM,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20,40)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T),
Index=Weight/(0.01*Height)^2,
IndexGroup=cut(Index,breaks = c(0,16,18.5,24.99,30,35,40,60))
)%>% select(-Date)#,-Mail) %>% filter(Count>1,MRM<RM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20",">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
levels(data$IndexGroup)=c("выраженный дефицит","дефицит","норма","избыток","ожирение1","ожирение2","ожирение3")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
#уникальные записи (где один от каждого человека берётся только одна запись)
#объяснить, по каким признакам людей считать одинаковыми
data.unique=data %>% select(AgeGroup,Height,BodyType,Experience,Sex,IndexGroup) %>% unique()
#функции
getparam=function(vec){
ln=length(levels(vec))
x=numeric(ln)
ns=character(ln)
for(i in seq(ln)){
x[i]=sum(vec==levels(vec)[i])/length(vec)
ns[i]=paste0(levels(vec)[i]," (",round(x[i]*100,2),"%)")
}
return(list(x=x,ns=ns))
}
getPIE=function(vec,main=""){
lst=getparam(vec)
pie(x=lst$x,labels=lst$ns,main=main)
}
getFan=function(vec,main=""){
pr=getparam(vec)
fan.plot(pr$x,labels=pr$ns,main=main)
}
data %>% ggplot(aes(x=factor(Count),y=RM/MRM-1))+geom_boxplot()+theme_bw()
data %>% filter(Count==3)
data %>% filter(RM==MRM)
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
#library(DAAG)
library(leaps)
library(plotly)
data=read_tsv("data(rus).tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","RM","MRM","Count","Action","Sex","Experience","Age","Weight","Height","BodyType","Mail")
data %<>%#filter(Count<=20) %>%
arrange(MRM,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20,40)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T),
Index=Weight/(0.01*Height)^2,
IndexGroup=cut(Index,breaks = c(0,16,18.5,24.99,30,35,40,60))
)%>% select(-Date)#,-Mail) %>% filter(Count>1,MRM<RM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20",">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
levels(data$IndexGroup)=c("выраженный дефицит","дефицит","норма","избыток","ожирение1","ожирение2","ожирение3")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
#уникальные записи (где один от каждого человека берётся только одна запись)
#объяснить, по каким признакам людей считать одинаковыми
data.unique=data %>% select(AgeGroup,Height,BodyType,Experience,Sex,IndexGroup) %>% unique()
#функции
getparam=function(vec){
ln=length(levels(vec))
x=numeric(ln)
ns=character(ln)
for(i in seq(ln)){
x[i]=sum(vec==levels(vec)[i])/length(vec)
ns[i]=paste0(levels(vec)[i]," (",round(x[i]*100,2),"%)")
}
return(list(x=x,ns=ns))
}
getPIE=function(vec,main=""){
lst=getparam(vec)
pie(x=lst$x,labels=lst$ns,main=main)
}
getFan=function(vec,main=""){
pr=getparam(vec)
fan.plot(pr$x,labels=pr$ns,main=main)
}
data %>% ggplot(aes(x=factor(Count),y=RM/MRM-1))+geom_boxplot()+theme_bw()
data %>% filter(Count==10)
#data %>% ggplot(aes(x=CountGroup,y=RM/MRM))+geom_boxplot()+theme_bw()
data %>% ggplot(aes(x=factor(Count),y=(RM/MRM-1)/Count))+geom_boxplot()+theme_bw()
#data %>% ggplot(aes(x=CountGroup,y=RM/MRM))+geom_boxplot()+theme_bw()
data %>% ggplot(aes(x=factor(Count),y=(RM/MRM-1)/Count))+geom_boxplot()+theme_bw()+geom_hline(yintercept = 0.0333,width =2)
#data %>% ggplot(aes(x=CountGroup,y=RM/MRM))+geom_boxplot()+theme_bw()
data %>% ggplot(aes(x=factor(Count),y=(RM/MRM-1)/Count))+
geom_boxplot()+theme_bw()+
geom_hline(yintercept = 0.0333,size =2,col="red")
#data %>% ggplot(aes(x=CountGroup,y=RM/MRM))+geom_boxplot()+theme_bw()
data %>% ggplot(aes(x=factor(Count),y=(RM/MRM-1)/Count))+
geom_boxplot()+theme_bw()+
geom_hline(yintercept = 0.0333,size =1.3,col="red")
#data %>% ggplot(aes(x=CountGroup,y=RM/MRM))+geom_boxplot()+theme_bw()
data %>% ggplot(aes(x=factor(Count),y=(RM/MRM-1)/Count))+
geom_boxplot()+theme_bw()+
geom_hline(yintercept = 0.0333,size =1.3,col="red")+
labs(x="Число повторений",title = "Оценка параметра для разного числа повторений")
#data %>% ggplot(aes(x=CountGroup,y=RM/MRM))+geom_boxplot()+theme_bw()
data %>% ggplot(aes(x=factor(Count),y=(RM/MRM-1)/Count))+
geom_boxplot()+theme_bw()+
geom_hline(yintercept = 0.0333,size =1.3,col="red")+
labs(x="Число повторений",title = "Оценка параметра для разного числа повторений",
subtitle = "Красным цветом обзначен параметр из книги Лилли. Как видно, он может быть верен для числа повторений от 2 до 5")
ggplot(data,aes(x=IndexGroup,y=RM))+geom_boxplot()+facet_wrap(vars(Action))
ggplot(data,aes(x=IndexGroup,y=RM))+geom_boxplot()+facet_wrap(vars(Action))+coord_flip()
ggplot(data,aes(x=IndexGroup,y=RM))+geom_boxplot()+facet_wrap(vars(Action))+coord_flip()+
labs(x="Группа по индексу массы",y="Повторный максимум",label="зависимость повторного максимума от индекса массы тела")
ggplot(data,aes(x=IndexGroup,y=RM))+geom_boxplot()+facet_wrap(vars(Action))+coord_flip()+
labs(x="Группа по индексу массы",y="Повторный максимум",title="зависимость повторного максимума от индекса массы тела")
ggplot(data,aes(x=IndexGroup,y=RM))+geom_boxplot()+facet_wrap(vars(Action))+coord_flip()+
labs(x="Группа по индексу массы",y="Повторный максимум",
title="Зависимость повторного максимума от индекса массы тела",
subtitle = "Из графика видно, что жим лёжа имеет тенденцию увеличиваться с ростом индекса массы тела. Однако для приседа и тяги это верно лишь до некоторого порога")
ggplot(data,aes(x=IndexGroup,y=RM))+geom_boxplot()+facet_wrap(vars(Action))+coord_flip()+
labs(x="Группа по индексу массы",y="Повторный максимум",
title="Зависимость повторного максимума от индекса массы тела",
subtitle = "Из графика видно, что жим лёжа имеет тенденцию увеличиваться с ростом индекса массы тела. \nОднако для приседа и тяги это верно лишь до некоторого порога")
ggplot(data,aes(x=IndexGroup,y=RM))+geom_boxplot()+facet_wrap(vars(Action))+coord_flip()+
labs(x="Группа по индексу массы",y="Повторный максимум",
title="Зависимость повторного максимума от индекса массы тела",
subtitle = "Из графика видно, что жим лёжа имеет тенденцию увеличиваться с ростом индекса массы тела. \nОднако для приседа и тяги это верно лишь до некоторого порога")+
theme_bw()
ggplot(data,aes(x=Index,y=RM))+geom_point()+facet_wrap(~Action)
ggplot(data,aes(x=Index,y=RM))+geom_point()+facet_wrap(~Action)+geom_smooth()
ggplot(data,aes(x=Index,y=RM,col=BodyType))+geom_point()+facet_wrap(~Action)+geom_smooth()
ggplot(data,aes(x=Index,y=RM,col=BodyType))+geom_point()+facet_wrap(~Action)+geom_smooth(method = "lm")
ggplot(data,aes(x=Index,y=RM,col=BodyType))+geom_point()+facet_wrap(~Action)+geom_smooth(method = "lm",inherit.aes = F)
ggplot(data,aes(x=Index,y=RM,col=BodyType))+geom_point()+facet_wrap(~Action)+geom_smooth(method = "lm",se = F)
ggplot(data,aes(x=Index,y=RM,col=BodyType))+geom_point()+
facet_wrap(~Action)+geom_smooth(method = "lm",se = F)+
theme_bw()+theme(legend.position = "bottom")
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
#library(DAAG)
library(leaps)
library(plotly)
data=read_tsv("data(rus).tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","RM","MRM","Count","Action","Sex","Experience","Age","Weight","Height","BodyType","Mail")
data %<>%#filter(Count<=20) %>%
arrange(MRM,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20,40)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T),
Index=Weight/(0.01*Height)^2,
IndexGroup=cut(Index,breaks = c(0,16,18.5,24.99,30,35,40,60))
)%>% select(-Date)#,-Mail) %>% filter(Count>1,MRM<RM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20",">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
levels(data$IndexGroup)=c("выраженный дефицит","дефицит","норма","избыток","ожирение1","ожирение2","ожирение3")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
#уникальные записи (где один от каждого человека берётся только одна запись)
#объяснить, по каким признакам людей считать одинаковыми
data.unique=data %>% select(AgeGroup,Height,BodyType,Experience,Sex,IndexGroup) %>% unique()
#функции
getparam=function(vec){
ln=length(levels(vec))
x=numeric(ln)
ns=character(ln)
for(i in seq(ln)){
x[i]=sum(vec==levels(vec)[i])/length(vec)
ns[i]=paste0(levels(vec)[i]," (",round(x[i]*100,2),"%)")
}
return(list(x=x,ns=ns))
}
getPIE=function(vec,main=""){
lst=getparam(vec)
pie(x=lst$x,labels=lst$ns,main=main)
}
getFan=function(vec,main=""){
pr=getparam(vec)
fan.plot(pr$x,labels=pr$ns,main=main)
}
ggplot(data,aes(x=Index,y=RM,col=BodyType))+geom_point()+
facet_wrap(~Action)+geom_smooth(method = "lm",se = F)+
theme_bw()+theme(legend.position = "bottom")
ggplot(data,aes(x=Index,y=RM,col=BodyType))+geom_point()+
facet_wrap(~Action)+geom_smooth(method = "lm",se = F)+
theme_bw()+theme(legend.position = "bottom")+
labs(x="Индекс массы тела",y="Повторный максимум",col="Телосложение")
ggplot(data,aes(x=IndexGroup,y=RM))+geom_boxplot()+facet_grid(Action~BodyType)
Иллюстрация некоторых парных взаимодействий:
```{r,cache=T,out.width='90%'}
GGally::ggpairs(data%>% select(RM,MRM,Action,BodyType),
title="Диаграммы взаимодействий между переменными в выборке",
lower = list(combo = "box")) #%>% ggplotly()
```
knitr::opts_chunk$set(echo = F,include = TRUE,tidy = TRUE,cache = FALSE,eval = TRUE, message = FALSE,warning = FALSE,fig.align = "center")
(ggplot(data,aes(x=Index,y=RM,col=BodyType))+geom_point()+
facet_wrap(~Action)+geom_smooth(method = "lm",se = F)+
theme_bw()+theme(legend.position = "bottom")+
labs(x="Индекс массы тела",y="Повторный максимум",col="Телосложение",
title = "Зависимость повторного максимума от индекса массы тела")) %>% ggplotly()
(ggplot(data,aes(x=Index,y=RM,col=BodyType))+geom_point()+
facet_wrap(~Action)+geom_smooth(method = "lm",se = F)+
theme_bw()+theme(legend.position = "bottom")+
labs(x="Индекс массы тела",y="Повторный максимум",col="Телосложение",
title = "Зависимость повторного максимума от индекса массы тела")) %>% ggplotly()
GGally::ggpairs(data%>% select(-Count,-Mail,-Age,-Sex,-Index,-Height,-CountGroup,-AgeGroup,-Weight),
title="Диаграммы взаимодействий между переменными в выборке",
lower = list(combo = "box")) #%>% ggplotly()
data %>% ggplot(aes(x=factor(Count),y=RM/MRM-1))+geom_boxplot()+theme_bw()
#data %>% ggplot(aes(x=CountGroup,y=RM/MRM))+geom_boxplot()+theme_bw()
data %>% ggplot(aes(x=factor(Count),y=(RM/MRM-1)/Count))+
geom_boxplot()+theme_bw()+
geom_hline(yintercept = 0.0333,size =1.3,col="red")+
labs(x="Число повторений",title = "Оценка параметра для разного числа повторений",
subtitle = "Красным цветом обозначен параметр из книги Лилли. Как видно, он может быть верен для числа повторений от 2 до 5")
data %>% mutate(perc=100*MRM/RM) %>% filter(Count<=15) %>%
group_by(factor(Count)) %>%
summarise(mean=t.test(perc,conf.level = 0.99)$estimate,
down=t.test(perc,conf.level = 0.99)$conf.int[1],
up=t.test(perc,conf.level = 0.99)$conf.int[2])
#По этому соотношению надо бы выбросы удалить
data %>% ggplot(aes(x=factor(Count),y=100*MRM/RM))+geom_boxplot()+coord_flip()+theme_bw()#+
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
#library(DAAG)
library(leaps)
library(plotly)
data=read_tsv("data(rus).tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","RM","MRM","Count","Action","Sex","Experience","Age","Weight","Height","BodyType","Mail")
data %<>%#filter(Count<=20) %>%
arrange(MRM,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20,40)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T),
Index=Weight/(0.01*Height)^2,
IndexGroup=cut(Index,breaks = c(0,16,18.5,24.99,30,35,40,60))
)%>% select(-Date)#,-Mail) %>% filter(Count>1,MRM<RM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20",">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
levels(data$IndexGroup)=c("выраженный дефицит","дефицит","норма","избыток","ожирение1","ожирение2","ожирение3")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
#уникальные записи (где один от каждого человека берётся только одна запись)
#объяснить, по каким признакам людей считать одинаковыми
data.unique=data %>% select(AgeGroup,Height,BodyType,Experience,Sex,IndexGroup) %>% unique()
#функции
getparam=function(vec){
ln=length(levels(vec))
x=numeric(ln)
ns=character(ln)
for(i in seq(ln)){
x[i]=sum(vec==levels(vec)[i])/length(vec)
ns[i]=paste0(levels(vec)[i]," (",round(x[i]*100,2),"%)")
}
return(list(x=x,ns=ns))
}
getPIE=function(vec,main=""){
lst=getparam(vec)
pie(x=lst$x,labels=lst$ns,main=main)
}
getFan=function(vec,main=""){
pr=getparam(vec)
fan.plot(pr$x,labels=pr$ns,main=main)
}
#По этому соотношению надо бы выбросы удалить
data %>% ggplot(aes(x=factor(Count),y=100*MRM/RM))+geom_boxplot()+coord_flip()+theme_bw()#+
data %>% mutate(perc=100*MRM/RM) %>% filter(Count<=15) %>%
group_by(factor(Count)) %>%
summarise(mean=t.test(perc,conf.level = 0.99)$estimate,
down=t.test(perc,conf.level = 0.99)$conf.int[1],
up=t.test(perc,conf.level = 0.99)$conf.int[2])
data %>% mutate(perc=100*MRM/RM) %>% filter(Count<=15) %>%
group_by(factor(Count)) %>%
summarise(mean=t.test(perc,conf.level = 0.99)$estimate,
down=t.test(perc,conf.level = 0.99)$conf.int[1],
up=t.test(perc,conf.level = 0.99)$conf.int[2])
data %>% mutate(perc=100*MRM/RM) %>% filter(Count<=15)
data %>% mutate(perc=100*MRM/RM) %>% filter(Count<=10|Count==12|Count=15|Count==20) %>%
group_by(factor(Count)) %>%
summarise(mean=t.test(perc,conf.level = 0.99)$estimate,
down=t.test(perc,conf.level = 0.99)$conf.int[1],
up=t.test(perc,conf.level = 0.99)$conf.int[2])
data %>% mutate(perc=100*MRM/RM) %>% filter(Count<=10|Count==12|Count==15|Count==20) %>%
group_by(factor(Count)) %>%
summarise(mean=t.test(perc,conf.level = 0.99)$estimate,
down=t.test(perc,conf.level = 0.99)$conf.int[1],
up=t.test(perc,conf.level = 0.99)$conf.int[2])
data %>% mutate(perc=100*MRM/RM) %>% filter(Count<=10|Count==12|Count==15|Count==20) %>%
group_by(factor(Count)) %>%
summarise(mean=t.test(perc,conf.level = 0.99)$estimate,
down=t.test(perc,conf.level = 0.99)$conf.int[1],
up=t.test(perc,conf.level = 0.99)$conf.int[2]) %>%
rename(c("f"))
data %>% mutate(perc=100*MRM/RM) %>% filter(Count<=10|Count==12|Count==15|Count==20) %>%
group_by(factor(Count)) %>%
summarise(mean=t.test(perc,conf.level = 0.99)$estimate,
down=t.test(perc,conf.level = 0.99)$conf.int[1],
up=t.test(perc,conf.level = 0.99)$conf.int[2]) %>%
rename("factor(Count)=Число повторений")
data %>% mutate(perc=100*MRM/RM) %>% filter(Count<=10|Count==12|Count==15|Count==20) %>%
group_by(factor(Count)) %>%
summarise(mean=t.test(perc,conf.level = 0.99)$estimate,
down=t.test(perc,conf.level = 0.99)$conf.int[1],
up=t.test(perc,conf.level = 0.99)$conf.int[2]) %>%
rename("factor(Count)"="Число повторений")
data %>% mutate(perc=100*MRM/RM) %>% filter(Count<=10|Count==12|Count==15|Count==20) %>%
group_by(factor(Count)) %>%
summarise(mean=t.test(perc,conf.level = 0.99)$estimate,
down=t.test(perc,conf.level = 0.99)$conf.int[1],
up=t.test(perc,conf.level = 0.99)$conf.int[2])
data %>% mutate(perc=100*MRM/RM) %>% filter(Count<=10|Count==12|Count==15|Count==20) %>%
group_by(factor(Count)) %>%
summarise(mean=t.test(perc,conf.level = 0.99)$estimate,
down=t.test(perc,conf.level = 0.99)$conf.int[1],
up=t.test(perc,conf.level = 0.99)$conf.int[2]) %>%
rename(!!c("Число повторений","Среднее","Нижнее","Предел"))
data %>% mutate(perc=100*MRM/RM) %>% filter(Count<=10|Count==12|Count==15|Count==20) %>%
group_by(factor(Count)) %>%
summarise(mean=t.test(perc,conf.level = 0.99)$estimate,
down=t.test(perc,conf.level = 0.99)$conf.int[1],
up=t.test(perc,conf.level = 0.99)$conf.int[2]) %>%
rename(!!c(var1="Число повторений",var2="Среднее",var3="Нижнее",var4="Предел"))
df=data %>% mutate(perc=100*MRM/RM) %>% filter(Count<=10|Count==12|Count==15|Count==20) %>%
group_by(factor(Count)) %>%
summarise(mean=t.test(perc,conf.level = 0.99)$estimate,
down=t.test(perc,conf.level = 0.99)$conf.int[1],
up=t.test(perc,conf.level = 0.99)$conf.int[2])
names(df)
df=data %>% mutate(perc=100*MRM/RM) %>% filter(Count<=10|Count==12|Count==15|Count==20) %>%
group_by(factor(Count)) %>%
summarise(mean=t.test(perc,conf.level = 0.99)$estimate,
down=t.test(perc,conf.level = 0.99)$conf.int[1],
up=t.test(perc,conf.level = 0.99)$conf.int[2])
names(df)=c("Число повторений","Среднее","Нижнее","Предел")
df
df=data %>% mutate(perc=100*MRM/RM) %>% filter(Count<=10|Count==12|Count==15|Count==20) %>%
group_by(factor(Count)) %>%
summarise(mean=t.test(perc,conf.level = 0.99)$estimate,
down=t.test(perc,conf.level = 0.99)$conf.int[1],
up=t.test(perc,conf.level = 0.99)$conf.int[2])
names(df)=c("Число повторений","Ожидаемый %","Нижняя граница","Верхняя граница")
df
#По этому соотношению надо бы выбросы удалить
data %>% ggplot(aes(x=factor(Count),y=100*MRM/RM))+geom_boxplot()+coord_flip()+theme_bw()#+
data.ct=data %>% filter(Count<=10|Count==12|Count==15|Count==20|Count==30|Count==35)
#По этому соотношению надо бы выбросы удалить
data.ct %>% ggplot(aes(x=factor(Count),y=100*MRM/RM))+geom_boxplot()+coord_flip()+theme_bw()#+
#По этому соотношению надо бы выбросы удалить
data.ct %>% ggplot(aes(x=factor(Count),y=100*MRM/RM))+geom_boxplot()+coord_flip()+theme_bw()+
labs(x="Число повторений",y="Какой процент составляет МПМ от ПМ")#+
prc+facet_wrap(~BodyType)
#По этому соотношению надо бы выбросы удалить
prc=data.ct %>% ggplot(aes(x=factor(Count),y=100*MRM/RM))+geom_boxplot()+coord_flip()+theme_bw()+
labs(x="Число повторений",y="Какой процент составляет МПМ от ПМ")
prc
prc+facet_wrap(~BodyType)
prc+facet_wrap(BodyType~)
prc+facet_wrap(BodyType~.)
prc+facet_grid(BodyType)
prc+facet_grid(vars(BodyType))
prc+facet_grid(vars(Action))
data.ct=data %>% filter(Count<=10|Count==12)
#По этому соотношению надо бы выбросы удалить
prc=data.ct %>% ggplot(aes(x=factor(Count),y=100*MRM/RM))+geom_boxplot()+coord_flip()+theme_bw()+
labs(x="Число повторений",y="Какой процент составляет МПМ от ПМ")
prc
prc+facet_grid(vars(Action))
prc %>% ggplotly()
(prc+facet_grid(vars(Action))) %>% ggplotly()
prc %>% ggplotly()
cors=sapply(1:10, function(x) data %>% filter(Count==x) %$% cor(RM,MRM))
сщ
cors
plot(cors)
install.packages("devtools")
library("devtools")
install_github("plotly", "ropensci")
paste(2:10,"повторений")
cors=sapply(2:10, function(x) data %>% filter(Count==x) %$% cor(RM,MRM))
names(cors)= paste(2:10,"repeats")
cors
#есть ли разница в проценте в зависимости от чего-то
pvalues=sapply(2:10, function(x) data %>% filter(Count==x) %$% aov(~BodyType,.))
#есть ли разница в проценте в зависимости от чего-то
pvalues=sapply(2:10, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~BodyType,.))
pvalues
pvalues=sapply(2:10, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~BodyType,.)$p.value)
pvalues
pvalues=sapply(2:10, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~BodyType,.) %>% summary())
pvalues
pvalues=sapply(2:10, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~BodyType,.)$Pr)
pvalues
#есть ли разница в проценте в зависимости от чего-то
pvalues=sapply(2:10, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~BodyType,.))
pvalues
pvalues=sapply(2:10, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~BodyType,.)%>% summary())
pvalues
View(pvalues)
pvalues=sapply(2:10, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~BodyType,.)%>% summary()$'Pr(>F)')
pvalues
t=aov(RM~BodyType,data)
t
summary(t)
tt=summary(t)
tt$'p.value'
tt$p.value
tt[5]
tt['Pr']
tt['Pr(>F)']
tt['Pr (>F)']
pvalues=sapply(2:10, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~BodyType,.)%>% summary() %>% .[[1]][["Pr(>F)"]])
pvalues
tt[[1]]
tt[[1][["Pr(>F)"]]]
tt[[1][["Pr(>F)"]]
tt[[1]][["Pr(>F)"]]
#есть ли разница в проценте в зависимости от чего-то
pvalues=sapply(2:10, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~BodyType,.)%>% summary() %>% .[[1]][["Pr(>F)"]][1])
#есть ли разница в проценте в зависимости от чего-то
pvalues=sapply(2:10, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~BodyType,.)%>% summary() %>% .[[1]][["Pr(>F)"]])
#есть ли разница в проценте в зависимости от чего-то
pvalues=sapply(2:10, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~BodyType,.)%>% summary() %$% .[[1]][["Pr(>F)"]])
pvalues
#есть ли разница в проценте в зависимости от чего-то
pvalues=sapply(2:10, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~BodyType,.)%>% summary() %$% .[[1]][["Pr(>F)"]][1])
pvalues
#есть ли разница в проценте в зависимости от чего-то
pvalues=sapply(2:10, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~BodyType,.)%>% summary() %$% .[[1]][["Pr(>F)"]][1])
names(pvalues)=names(cors)
pvalues
#есть ли разница в проценте в зависимости от чего-то
pvalues=sapply(2:10, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~Action,.)%>% summary() %$% .[[1]][["Pr(>F)"]][1])
names(pvalues)=names(cors)
pvalues
pvalues=sapply(2:5, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~Action,.)%>% summary() %$% .[[1]][["Pr(>F)"]][1])
pvalues
pvalues=sapply(2:7, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~Action,.)%>% summary() %$% .[[1]][["Pr(>F)"]][1])
pvalues=sapply(2:6, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~Action,.)%>% summary() %$% .[[1]][["Pr(>F)"]][1])
pvalues
names(pvalues)=names(cors)
pvalues=sapply(2:6, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~AgeGroup,.)%>% summary() %$% .[[1]][["Pr(>F)"]][1])
pvalues=sapply(2:6, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~IndexGroup,.)%>% summary() %$% .[[1]][["Pr(>F)"]][1])
pvalues
pvalues=sapply(2:8, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~IndexGroup,.)%>% summary() %$% .[[1]][["Pr(>F)"]][1])
pvalues=sapply(2:10, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~IndexGroup,.)%>% summary() %$% .[[1]][["Pr(>F)"]][1])
pvalues
names(pvalues)=paste(2:10,"repeats")
pvalues
#есть ли разница в проценте в зависимости от чего-то
cat("p-значения для телосложений\n")
pvalues=sapply(2:10, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~BodyType,.)%>% summary() %$% .[[1]][["Pr(>F)"]][1])
names(pvalues)=names(cors)
pvalues
cat("p-значения для типа движения\n")
pvalues=sapply(2:6, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~Action,.)%>% summary() %$% .[[1]][["Pr(>F)"]][1])
names(pvalues)=paste(2:6,"repeats")
pvalues
cat("p-значения для групп по индексу массы\n")
pvalues=sapply(2:10, function(x) data %>% filter(Count==x) %$% aov(MRM/RM~IndexGroup,.)%>% summary() %$% .[[1]][["Pr(>F)"]][1])
names(pvalues)=paste(2:10,"repeats")
pvalues
4%%3
