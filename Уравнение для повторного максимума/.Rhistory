maxerror=2
#уникальные записи (где один от каждого человека берётся только одна запись)
#объяснить, по каким признакам людей считать одинаковыми
data.unique=data %>% select(AgeGroup,Height,BodyType,Experience,Sex,IndexGroup) %>% unique()
GGally::ggpairs(data%>% select(-Count,-Mail,-Age),
title="Диаграмы взаимодействий между переменными в выборке",
lower = list(continuous = "RMooth_loess", combo = "box"))
#Загрузка данных####
library(tidyverse)
library(magrittr)
#library(ggformula)
#library(ggthemes)
#library(tidyquant)
#library(ggvis)
#library(plotrix)
#library(car)
#library(DAAG)
#library(leaps)
data=read_tsv("data(rus).tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","RM","MRM","Count","Action","Sex","Experience","Age","Weight","Height","BodyType","Mail")
data %<>%#filter(Count<=20) %>%
arrange(MRM,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20,40)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T),
Index=Weight/(0.01*Height)^2,
IndexGroup=cut(Index,breaks = c(0,16,18.5,24.99,30,35,40,60))
)%>% select(-Date)#,-Mail) %>% filter(Count>1,MRM<RM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20",">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
levels(data$IndexGroup)=c("выраженный дефицит","дефицит","норма","избыток","ожирение1","ожирение2","ожирение3")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
#уникальные записи (где один от каждого человека берётся только одна запись)
#объяснить, по каким признакам людей считать одинаковыми
data.unique=data %>% select(AgeGroup,Height,BodyType,Experience,Sex,IndexGroup) %>% unique()
GGally::ggpairs(data%>% select(-Count,-Mail,-Age),
title="Диаграмы взаимодействий между переменными в выборке",
lower = list(continuous = "RMooth_loess", combo = "box"))
summary(data %>% select(-Mail))
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
#library(DAAG)
library(leaps)
data=read_tsv("data(rus).tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","RM","MRM","Count","Action","Sex","Experience","Age","Weight","Height","BodyType","Mail")
data %<>%#filter(Count<=20) %>%
arrange(MRM,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20,40)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T),
Index=Weight/(0.01*Height)^2,
IndexGroup=cut(Index,breaks = c(0,16,18.5,24.99,30,35,40,60))
)%>% select(-Date)#,-Mail) %>% filter(Count>1,MRM<RM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20",">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
levels(data$IndexGroup)=c("выраженный дефицит","дефицит","норма","избыток","ожирение1","ожирение2","ожирение3")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
#уникальные записи (где один от каждого человека берётся только одна запись)
#объяснить, по каким признакам людей считать одинаковыми
data.unique=data %>% select(AgeGroup,Height,BodyType,Experience,Sex,IndexGroup) %>% unique()
GGally::ggpairs(data%>% select(-Count,-Mail,-Age),
title="Диаграмы взаимодействий между переменными в выборке",
lower = list(continuous = "RMooth_loess", combo = "box"))
summary(data %>% select(-Mail))
View(data)
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
#library(DAAG)
library(leaps)
data=read_tsv("data(rus).tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","RM","MRM","Count","Action","Sex","Experience","Age","Weight","Height","BodyType","Mail")
data %<>%#filter(Count<=20) %>%
arrange(MRM,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20,40)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T),
Index=Weight/(0.01*Height)^2,
IndexGroup=cut(Index,breaks = c(0,16,18.5,24.99,30,35,40,60))
)%>% select(-Date)#,-Mail) %>% filter(Count>1,MRM<RM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20",">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
levels(data$IndexGroup)=c("выраженный дефицит","дефицит","норма","избыток","ожирение1","ожирение2","ожирение3")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
#уникальные записи (где один от каждого человека берётся только одна запись)
#объяснить, по каким признакам людей считать одинаковыми
data.unique=data %>% select(AgeGroup,Height,BodyType,Experience,Sex,IndexGroup) %>% unique()
#
GGally::ggpairs(data%>% select(-Count,-Mail,-Age),
title="Диаграмы взаимодействий между переменными в выборке",
lower = list(continuous = "RMooth_loess", combo = "box"))
install.packages(c("bit", "bookdown", "broom", "Cairo", "callr", "car", "cli", "covr", "crosstalk", "dendextend", "DescTools", "devtools", "digest", "doBy", "dplyr", "Ecdat", "eiPack", "FactoMineR", "fBasics", "fGarch", "forcats", "foreach", "forecast", "foreign", "fs", "geojsonio", "geojsonlint", "gganimate", "ggformula", "ggplot2", "ggpubr", "ggraph", "ggrepel", "glmnetUtils", "glue", "gplots", "graphlayouts", "gridGraphics", "h2o", "klaR", "lattice", "lava", "lifecycle", "lintr", "manipulateWidget", "matrixStats", "mboost", "MCMCpack", "memisc", "mets", "mice", "mlogit", "ModelMetrics", "modelr", "modeltools", "mongolite", "mvtnorm", "ncvreg", "nlme", "nloptr", "nnet", "osmdata", "party", "partykit", "pbkrtest", "plm", "plotly", "plyr", "pmml", "processx", "proj4", "ps", "pscl", "quantmod", "R.methodsS3", "Rcpp", "RcppArmadillo", "Rcsdp", "remotes", "rgl", "riskRegression", "rlang", "roxygen2", "rstudioapi", "rugarch", "servr", "sfsmisc", "shiny", "shinyWidgets", "sp", "SQUAREM", "statmod", "stringi", "styler", "survival", "testthat", "tidyquant", "tinytex", "tripack", "TSP", "units", "V8", "vcd", "vctrs", "wskm", "xml2"))
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
#library(DAAG)
library(leaps)
data=read_tsv("data(rus).tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","RM","MRM","Count","Action","Sex","Experience","Age","Weight","Height","BodyType","Mail")
data %<>%#filter(Count<=20) %>%
arrange(MRM,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20,40)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T),
Index=Weight/(0.01*Height)^2,
IndexGroup=cut(Index,breaks = c(0,16,18.5,24.99,30,35,40,60))
)%>% select(-Date)#,-Mail) %>% filter(Count>1,MRM<RM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20",">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
levels(data$IndexGroup)=c("выраженный дефицит","дефицит","норма","избыток","ожирение1","ожирение2","ожирение3")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
#уникальные записи (где один от каждого человека берётся только одна запись)
#объяснить, по каким признакам людей считать одинаковыми
data.unique=data %>% select(AgeGroup,Height,BodyType,Experience,Sex,IndexGroup) %>% unique()
summary(data %>% select(-Mail))
GGally::ggpairs(data%>% select(-Count,-Mail,-Age),
title="Диаграмы взаимодействий между переменными в выборке",
lower = list(continuous = "RMooth_loess", combo = "box"))
GGally::ggpairs(data%>% select(-Count,-Mail,-Age),
title="Диаграмы взаимодействий между переменными в выборке",
lower = list( combo = "box"))
View(data)
View(data)
GGally::ggpairs(data%>% select(-Count,-Mail,-Age),
title="Диаграмы взаимодействий между переменными в выборке",
lower = list( combo = "box")) %>% ggplotly()
library(plotly)
GGally::ggpairs(data%>% select(-Count,-Mail,-Age),
title="Диаграмы взаимодействий между переменными в выборке",
lower = list( combo = "box")) %>% ggplotly()
GGally::ggpairs(data%>% select(-Count,-Mail,-Age),
title="Диаграмы взаимодействий между переменными в выборке",
lower = list( combo = "box")) #%>% ggplotly()
GGally::ggpairs(data%>% select(-Count,-Mail,-Age,Sex,Index),
title="Диаграмы взаимодействий между переменными в выборке",
lower = list( combo = "box")) #%>% ggplotly()
GGally::ggpairs(data%>% select(-Count,-Mail,-Age,-Sex,-Index),
title="Диаграмы взаимодействий между переменными в выборке",
lower = list( combo = "box")) #%>% ggplotly()
GGally::ggpairs(data%>% select(-Count,-Mail,-Age,-Sex,-Index,-Height,-CountGroup,-AgeGroup),
title="Диаграмы взаимодействий между переменными в выборке",
lower = list( combo = "box")) #%>% ggplotly()
GGally::ggpairs(data%>% select(-Count,-Mail,-Age,-Sex,-Index,-Height,-CountGroup,-AgeGroup,-Weight),
title="Диаграмы взаимодействий между переменными в выборке",
lower = list(combo = "box")) #%>% ggplotly()
ggplot(data,aes(x=Action,y=RM))+geom_boxplot()+facet_wrap(vars(IndexGroup))
ggplot(data,aes(x=Action,y=RM))+geom_boxplot()+facet_wrap(vars(IndexGroup),vars(BodyType))
ggplot(data,aes(x=Action,y=RM))+geom_boxplot()+facet_wrap(vars(IndexGroup,BodyType))
ggplot(data,aes(x=Action,y=RM))+geom_boxplot()+facet_grid(~IndexGroup+BodyType)
ggplot(data,aes(x=Action,y=RM))+geom_boxplot()+facet_grid(IndexGroup~BodyType)
ggplot(data,aes(x=Action,y=RM))+geom_boxplot()+facet_wrap(vars(IndexGroup))
ggplot(data,aes(x=IndexGroup,y=RM))+geom_boxplot()+facet_wrap(vars(Action))
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
#library(DAAG)
library(leaps)
library(plotly)
data=read_tsv("data(rus).tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","RM","MRM","Count","Action","Sex","Experience","Age","Weight","Height","BodyType","Mail")
data %<>%#filter(Count<=20) %>%
arrange(MRM,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20,40)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T),
Index=Weight/(0.01*Height)^2,
IndexGroup=cut(Index,breaks = c(0,16,18.5,24.99,30,35,40,60))
)%>% select(-Date)#,-Mail) %>% filter(Count>1,MRM<RM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20",">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
levels(data$IndexGroup)=c("выраженный дефицит","дефицит","норма","избыток","ожирение1","ожирение2","ожирение3")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
#уникальные записи (где один от каждого человека берётся только одна запись)
#объяснить, по каким признакам людей считать одинаковыми
data.unique=data %>% select(AgeGroup,Height,BodyType,Experience,Sex,IndexGroup) %>% unique()
ggplot(data,aes(x=IndexGroup,y=RM))+geom_boxplot()+facet_wrap(vars(Action))
ggplot(data,aes(x=IndexGroup,y=RM))+geom_boxplot()+facet_wrap(vars(Body))
ggplot(data,aes(x=IndexGroup,y=RM))+geom_boxplot()+facet_wrap(vars(BodyType))
ggplot(data,aes(x=IndexGroup,y=RM))+geom_boxplot()+facet_wrap(Action~BodyType)
ggplot(data,aes(x=IndexGroup,y=RM))+geom_boxplot()+facet_grid(Action~BodyType)
ggplot(data,aes(x=Index,y=RM))+geom_boxplot()+facet_grid(Action~BodyType)
ggplot(data,aes(x=Index,y=RM))+geom_point()+facet_grid(Action~BodyType)
ggplot(data,aes(x=Index,y=RM))+geom_point()+facet_grid(Action)
ggplot(data,aes(x=Index,y=RM))+geom_point()+facet_wrap(~Action)
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
#library(DAAG)
library(leaps)
library(plotly)
data=read_tsv("data(rus).tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","RM","MRM","Count","Action","Sex","Experience","Age","Weight","Height","BodyType","Mail")
data %<>%#filter(Count<=20) %>%
arrange(MRM,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20,40)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T),
Index=Weight/(0.01*Height)^2,
IndexGroup=cut(Index,breaks = c(0,16,18.5,24.99,30,35,40,60))
)%>% select(-Date)#,-Mail) %>% filter(Count>1,MRM<RM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20",">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
levels(data$IndexGroup)=c("выраженный дефицит","дефицит","норма","избыток","ожирение1","ожирение2","ожирение3")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
#уникальные записи (где один от каждого человека берётся только одна запись)
#объяснить, по каким признакам людей считать одинаковыми
data.unique=data %>% select(AgeGroup,Height,BodyType,Experience,Sex,IndexGroup) %>% unique()
#функции
getparam=function(vec){
ln=length(levels(vec))
x=numeric(ln)
ns=character(ln)
for(i in seq(ln)){
x[i]=sum(vec==levels(vec)[i])/length(vec)
ns[i]=paste0(levels(vec)[i]," (",round(x[i]*100,2),"%)")
}
return(list(x=x,ns=ns))
}
getPIE=function(vec,main=""){
lst=getparam(vec)
pie(x=lst$x,labels=lst$ns,main=main)
}
getFan=function(vec,main=""){
pr=getparam(vec)
fan.plot(pr$x,labels=pr$ns,main=main)
}
summary(data %>% select(-Mail))
View(data)
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
#library(DAAG)
library(leaps)
library(plotly)
data=read_tsv("data(rus).tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","RM","MRM","Count","Action","Sex","Experience","Age","Weight","Height","BodyType","Mail")
data %<>%#filter(Count<=20) %>%
arrange(MRM,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20,40)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T),
Index=Weight/(0.01*Height)^2,
IndexGroup=cut(Index,breaks = c(0,16,18.5,24.99,30,35,40,60))
)%>% select(-Date)#,-Mail) %>% filter(Count>1,MRM<RM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20",">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
levels(data$IndexGroup)=c("выраженный дефицит","дефицит","норма","избыток","ожирение1","ожирение2","ожирение3")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
#уникальные записи (где один от каждого человека берётся только одна запись)
#объяснить, по каким признакам людей считать одинаковыми
data.unique=data %>% select(AgeGroup,Height,BodyType,Experience,Sex,IndexGroup) %>% unique()
#функции
getparam=function(vec){
ln=length(levels(vec))
x=numeric(ln)
ns=character(ln)
for(i in seq(ln)){
x[i]=sum(vec==levels(vec)[i])/length(vec)
ns[i]=paste0(levels(vec)[i]," (",round(x[i]*100,2),"%)")
}
return(list(x=x,ns=ns))
}
getPIE=function(vec,main=""){
lst=getparam(vec)
pie(x=lst$x,labels=lst$ns,main=main)
}
getFan=function(vec,main=""){
pr=getparam(vec)
fan.plot(pr$x,labels=pr$ns,main=main)
}
summary(data %>% select(-Mail))
View(data)
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
#library(DAAG)
library(leaps)
library(plotly)
data=read_tsv("data(rus).tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","RM","MRM","Count","Action","Sex","Experience","Age","Weight","Height","BodyType","Mail")
data %<>%#filter(Count<=20) %>%
arrange(MRM,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20,40)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T),
Index=Weight/(0.01*Height)^2,
IndexGroup=cut(Index,breaks = c(0,16,18.5,24.99,30,35,40,60))
)%>% select(-Date)#,-Mail) %>% filter(Count>1,MRM<RM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20",">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
levels(data$IndexGroup)=c("выраженный дефицит","дефицит","норма","избыток","ожирение1","ожирение2","ожирение3")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
#уникальные записи (где один от каждого человека берётся только одна запись)
#объяснить, по каким признакам людей считать одинаковыми
data.unique=data %>% select(AgeGroup,Height,BodyType,Experience,Sex,IndexGroup) %>% unique()
#функции
getparam=function(vec){
ln=length(levels(vec))
x=numeric(ln)
ns=character(ln)
for(i in seq(ln)){
x[i]=sum(vec==levels(vec)[i])/length(vec)
ns[i]=paste0(levels(vec)[i]," (",round(x[i]*100,2),"%)")
}
return(list(x=x,ns=ns))
}
getPIE=function(vec,main=""){
lst=getparam(vec)
pie(x=lst$x,labels=lst$ns,main=main)
}
getFan=function(vec,main=""){
pr=getparam(vec)
fan.plot(pr$x,labels=pr$ns,main=main)
}
summary(data %>% select(-Mail))
getPIE(data.unique$BodyType)
par(mfrow=c(2,1))
getPIE(data.unique$BodyType)
getPIE(data.unique$Action)
par()
par(mfrow=c(2,1))
getPIE(data.unique$BodyType)
getPIE(data$Action)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
getPIE(data.unique$BodyType)
getPIE(data$Action)
par(mfrow=c(1,1))
chisq.test(data.unique%>% filter(Sex=="Мужчина") %>%select(BodyType) %>% table())
getPIE(data$CountGroup,main = "Диапазон повторений")
ggplot(data,aes(x=CountGroup))+geom_bar()+theme_classic()+labs(title="Количество человек в каждом диапазоне повторений",x="Диапазон повторений",y="Количество")
par(mfrow=c(3,1),mai=rep(0.1,4))
getPIE(data$CountGroup,main = "Диапазон повторений")
getPIE(data$Experience,main = "Опыт тренировок")
getPIE(data$AgeGroup,main = "Возрастная группа")
ggplot(data,aes(x=CountGroup))+geom_bar()+theme_classic()+labs(title="Количество наблюдений в каждом диапазоне повторений",x="Диапазон повторений",y="Количество")
ggplot(data,aes(x=Experience))+geom_bar()+theme_classic()+labs(title="Распределение по опыту тренировок",x="Опыт тренировок",y="Количество")
ggplot(data,aes(x=AgeGroup))+geom_bar()+theme_classic()+labs(title="Распределение по возрасту",x="Возрастная группа",y="Количество")
par(mfrow=c(3,1),mai=rep(0.1,4))
getPIE(data$CountGroup,main = "Диапазон повторений")
getPIE(data$Experience,main = "Опыт тренировок")
getPIE(data$AgeGroup,main = "Возрастная группа")
par(mfrow=c(3,1),mai=rep(0.05,4))
getPIE(data$CountGroup,main = "Диапазон повторений")
getPIE(data$Experience,main = "Опыт тренировок")
getPIE(data$AgeGroup,main = "Возрастная группа")
ggplot(data,aes(x=CountGroup))+geom_bar()+theme_classic()+labs(title="Количество наблюдений в каждом диапазоне повторений",x="Диапазон повторений",y="Количество")
#среди эндоморфов избыток веса встречается почаще
data.unique %$%  table(BodyType,IndexGroup)
chisq.test(data.unique%>% filter(IndexGroup=="ожирение1") %>%select(BodyType) %>% table())
ggplot(data,aes(x=Age,y=Index))+geom_point()
#ggplot(data,aes(x=Age,y=Index))+geom_point()
data %$%cor(Age,Index)
tb=data.unique%>% mutate(Obees=ifelse(IndexGroup=="ожирение1","да","нет")) %>%select(Obees,BodyType) %>% table()
tb %>% chisq.test()
tb %>% t() %>% prop.test()#для всех
data.unique%>%
mutate(Obees=ifelse(IndexGroup=="ожирение1","да","нет"),Bd=ifelse(BodyType=='Эндоморф',1,0)) %>%
select(Obees,Bd) %>% table() %>% t() %>%
prop.test(correct = F)
data.unique%>%
mutate(Obees=ifelse(IndexGroup=="ожирение1","да","нет"),Bd=ifelse(BodyType=='Эндоморф',1,0)) %>%
select(Obees,Bd) %>% table() %>% t() %>%
prop.test()
data.unique%>%
mutate(Obees=ifelse(IndexGroup=="ожирение1","да","нет"),Bd=ifelse(BodyType=='Эндоморф',1,0)) %>%
select(Obees,Bd) %>% table()
ggplot(data,aes(x=CountGroup))+geom_bar()+theme_classic()+labs(title="Количество наблюдений в каждом диапазоне повторений",x="Диапазон повторений",y="Количество") %>% ggplotly()
(ggplot(data,aes(x=CountGroup))+geom_bar()+theme_classic()+labs(title="Количество наблюдений в каждом диапазоне повторений",x="Диапазон повторений",y="Количество")) %>% ggplotly()
(ggplot(data,aes(x=CountGroup,fill=Action))+geom_bar()+theme_classic()+labs(title="Количество наблюдений в каждом диапазоне повторений",x="Диапазон повторений",y="Количество")) %>% ggplotly()
GGally::ggpairs(data%>% select(RM,MRM,Action,BodyType),
title="Диаграммы взаимодействий между переменными в выборке",
lower = list(combo = "box")) #%>% ggplotly()
GGally::ggpairs(data%>% select(RM,BodyType,CountGroup),
title="Диаграммы взаимодействий между переменными в выборке",
lower = list(combo = "box")) #%>% ggplotly()
GGally::ggpairs(data%>% select(RM,BodyType,AgeGroup),
title="Диаграммы взаимодействий между переменными в выборке",
lower = list(combo = "box")) #%>% ggplotly()
GGally::ggpairs(data%>% select(RM,BodyType,IndexGroup),
title="Диаграммы взаимодействий между переменными в выборке",
lower = list(combo = "box")) #%>% ggplotly()
GGally::ggpairs(data%>% select(RM,Action,IndexGroup),
title="Диаграммы взаимодействий между переменными в выборке",
lower = list(combo = "box")) #%>% ggplotly()
data %>% ggplot(aes(x=factor(Count),y=RM/MRM-1))+geom_boxplot()+theme_bw()
#data %>% ggplot(aes(x=CountGroup,y=RM/MRM))+geom_boxplot()+theme_bw()
data %>% ggplot(aes(x=factor(Count),y=(RM/MRM-1)/Count))+geom_boxplot()+theme_bw()
data %>% filter(Count==4)
