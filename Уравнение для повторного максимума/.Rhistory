}
ShowErrors=function(model,power.coef=1,sum.coef=0){
Show(predict(model,data)*power.coef+sum.coef)
#cat("AIC =",AIC(model),"\n")
}
############################################################################################################
#Val+Val*Count с поправкой на группу
md=lm(SM~Val:Count:CountGroup+Val:CountGroup-1,data)
Show(predict(md,data))
md=lm(SM~Val:Count:CountGroup+Val:Body-1,data)
Show(predict(md,data))
md=lm(SM~Val:Count:CountGroup+Val-1,data)
ShowErrors(md)
md=lm(SM~Val:Count:CountGroup+Val:CountGroup+Val+Val:Count-1,data)
ShowErrors(md)
#md=lm(SM~Val:Count+Val-1,data,subset = data$Count<4)
md=step(md,
direction = "both",
scope = (~.+
Val:Body+Val:Count:Body+
Val:Experience+
Val:Count:Experience+
Val:Count:CountGroup:Body+
Val:CountGroup:Body+
I(Val*Weight/(High-100))+
I((Val-100)/Val)+
poly(Val/Weight,2)+
Val+Val:Count
),steps=1000)
Show(predict(md,data))
md=lm(SM~Val+Val:Count-1+Val:Body:Count+Val:Experience:Count+
Val:Body+Val:Count:CountGroup+Val:CountGroup+#Val:Sex
Val:Experience+
I(Val*Weight/(High-100))+
I((Val-100)/Val)+poly(Val/Weight,2)
,data)
#md=lm(SM~Val:Count+Val-1,data,subset = data$Count<4)
md=step(md,
direction = "both",
scope = (~.+
Val:Body+Val:Count:Body+
Val:Experience+
Val:Count:Experience+
Val:Count:CountGroup:Body+
Val:CountGroup:Body+
I(Val*Weight/(High-100))+
I((Val-100)/Val)+
poly(Val/Weight,2)+
Val+Val:Count
),steps=1000)
Show(predict(md,data))
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
data=read_tsv("data.tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","SM","Val","Count","Type","Sex","Experience","Age","Weight","High","Body","Mail")
data %<>%filter(Count<=20) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,7,12,20)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T)
)%>% select(-Date)#,-Mail) %>% filter(Count>1,Val<SM)
levels(data$CountGroup)=c("2-3","4-7","8-12","13-20")#,">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
View(data)
levels(data$CountGroup)
#Функция ошибок####
Error=function(target,weight) (target-weight)^2 %>% mean() %>% sqrt()
Show=function(vals,df=data){
#vals=predict(model,df)
err=df$SM-vals
cbind(value=vals,Target=df$SM,Set=paste0(df$Val,"*",df$Count),
ERROR=abs(df$SM-vals),
ErrorPercent=abs(err)/df$SM*100,
df[,c(3:11)]) %>% tbl_df() %>% select(-Count)%>% arrange(-ERROR,-ErrorPercent,Weight) %>%
filter(ERROR>1)%>% print()
cat("\n")
rg=range(err)#;print(err);print(rg)
if(rg[1]<0)cat("------------> Наибольшая ошибка в большую сторону:",-rg[1],"\n")
if(rg[2]>0)cat("------------> Наибольшая ошибка в меньшую сторону:",rg[2],"\n")
s=sum(abs(err)/df$SM*100>maxerror)
len=length(err)
cat("Модель ошиблась более чем на",maxerror,"% в",s,"случаях из",len,"(",s/len*100,"%)\n")
s=sum(abs(err)>maxerror)
cat("Модель ошиблась более чем на",maxerror,"кг в",s,"случаях из",len,"(",s/len*100,"%)\n")
cat("-------------------> Среднеквадратичная ошибка:",Error(vals,df$SM),"\n")
}
ShowErrors=function(model,power.coef=1,sum.coef=0){
Show(predict(model,data)*power.coef+sum.coef)
#cat("AIC =",AIC(model),"\n")
}
############################################################################################################
#Val+Val*Count с поправкой на группу
md=lm(SM~Val:Count:CountGroup+Val:CountGroup-1,data)
summary(md)
ShowErrors(md)
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
data=read_tsv("data.tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","SM","Val","Count","Type","Sex","Experience","Age","Weight","High","Body","Mail")
data %<>%filter(Count<=20) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,7,12,20)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T)
)%>% select(-Date)#,-Mail) %>% filter(Count>1,Val<SM)
levels(data$CountGroup)=c("2-3","4-7","8-12","13-20")#,">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
#Функция ошибок####
Error=function(target,weight) (target-weight)^2 %>% mean() %>% sqrt()
Show=function(vals,df=data){
#vals=predict(model,df)
err=df$SM-vals
cbind(value=vals,Target=df$SM,Set=paste0(df$Val,"*",df$Count),
ERROR=abs(df$SM-vals),
ErrorPercent=abs(err)/df$SM*100,
df[,c(3:11)]) %>% tbl_df() %>% select(-Count)%>% arrange(-ERROR,-ErrorPercent,Weight) %>%
filter(ERROR>1)%>% print()
cat("\n")
rg=range(err)#;print(err);print(rg)
if(rg[1]<0)cat("------------> Наибольшая ошибка в большую сторону:",-rg[1],"\n")
if(rg[2]>0)cat("------------> Наибольшая ошибка в меньшую сторону:",rg[2],"\n")
s=sum(abs(err)/df$SM*100>maxerror)
len=length(err)
cat("Модель ошиблась более чем на",maxerror,"% в",s,"случаях из",len,"(",s/len*100,"%)\n")
s=sum(abs(err)>maxerror)
cat("Модель ошиблась более чем на",maxerror,"кг в",s,"случаях из",len,"(",s/len*100,"%)\n")
cat("-------------------> Среднеквадратичная ошибка:",Error(vals,df$SM),"\n")
}
ShowErrors=function(model,power.coef=1,sum.coef=0){
Show(predict(model,data)*power.coef+sum.coef)
#cat("AIC =",AIC(model),"\n")
}
#оптимизация чисто коэффициента
md=nls(SM~Val*(1+coef*Count),
data=data,
start = list(coef=0.0333))
summary(md)
md=nls(SM~Val*(1+coef*Count:CountGroup),
data=data,
start = list(coef=0.0333))
Show(predict(md,data))
md=nls(SM~Val*(s+coef*Count)^t,
data=data,
start = list(s=1,coef=0.0333,t=1))
summary(md)
Show(predict(md,data))
#оптимизация чисто коэффициента
md=nls(SM~Val*(Weight)/(High-100)*(s+coef*Count)^t,
data=data,
start = list(s=1,coef=0.0333,t=1))
summary(md)
Show(predict(md,data))
View(data)
#оптимизация чисто коэффициента
md=nls(SM~Val*(s*(Weight)/(High-100)+coef*Count)^t,
data=data,
start = list(s=1,coef=0.0333,t=1))
summary(md)
Show(predict(md,data))
#оптимизация чисто коэффициента
md=nls(SM~Val*(s+coef*Count)^t+k*(Val-100)/Val,
data=data,
start = list(s=1,coef=0.0333,t=1,k=0))
summary(md)
Show(predict(md,data))
#оптимизация чисто коэффициента
md=nls(SM~Val*(s+coef*Count)^t+k*(Weight-100)/Val,
data=data,
start = list(s=1,coef=0.0333,t=1,k=0))
summary(md)
Show(predict(md,data))
#оптимизация чисто коэффициента
md=nls(SM~Val*(s+coef*Count)^t+k*Weight/Val,
data=data,
start = list(s=1,coef=0.0333,t=1,k=0))
summary(md)
Show(predict(md,data))
md=lm(SM~Val+Val:Count-1+Val:Body:Count+Val:Experience:Count+
Val:Body+Val:Count:CountGroup+Val:CountGroup+#Val:Sex
Val:Experience+
I(Val*Weight/(High-100))+
I((Val-100)/Val)+poly(Val/Weight,2)
,data)
#md=lm(SM~Val:Count+Val-1,data,subset = data$Count<4)
md=step(md,
direction = "both",
scope = (~.+
Val:Body+Val:Count:Body+
Val:Experience+
Val:Count:Experience+
Val:Count:CountGroup:Body+
Val:CountGroup:Body+
I(Val*Weight/(High-100))+
I((Val-100)/Val)+
poly(Val/Weight,2)+
Val+Val:Count
),steps=1000)
Show(predict(md,data))
#md=lm(SM~Val:Count+Val-1,data,subset = data$Count<4)
md=step(md,
direction = "both",
scope = (~.+
Val:Body+Val:Count:Body+
Val:Experience+
Val:AgeGroup+
Val:Count:Experience+
Val:Count:CountGroup:Body+
Val:CountGroup:Body+
I(Val*Weight/(High-100))+
I((Val-100)/Val)+
poly(Val/Weight,2)+
Val+Val:Count
),steps=1000)
md=lm(SM~Val+Val:Count-1+Val:Body:Count+Val:Experience:Count+
Val:Body+Val:Count:CountGroup+Val:CountGroup+#Val:Sex
Val:Experience+
I(Val*Weight/(High-100))+
I((Val-100)/Val)+poly(Val/Weight,2)
,data)
#md=lm(SM~Val:Count+Val-1,data,subset = data$Count<4)
md=step(md,
direction = "both",
scope = (~.+
Val:Body+
Val:Count:Body+
Val:Experience+
Val:AgeGroup:Experince+
Val:Count:Experience+
Val:Count:CountGroup:Body+
Val:CountGroup:Body+
I(Val/Weight):CountGroup+
I(Val*Weight/(High-100))+
I((Val-100)/Val)+
poly(Val/Weight,2)+
Val+Val:Count
),steps=1000)
#md=lm(SM~Val:Count+Val-1,data,subset = data$Count<4)
md=step(md,
direction = "both",
scope = (~.+
Val:Body+
Val:Count:Body+
Val:Experience+
Val:AgeGroup:Experience+
Val:Count:Experience+
Val:Count:CountGroup:Body+
Val:CountGroup:Body+
I(Val/Weight):CountGroup+
I(Val*Weight/(High-100))+
I((Val-100)/Val)+
poly(Val/Weight,2)+
Val+Val:Count
),steps=1000)
#md=lm(SM~Val:Count+Val-1,data,subset = data$Count<4)
md=step(md,
direction = "both",
scope = (~.+
Val:Body+
Val:Count:Body+
Val:Experience+
Val:AgeGroup:Experience+
Val:Count:Experience+
Val:Count:CountGroup:Body+
Val:CountGroup:Body+
I(Val*Count/Weight):CountGroup+
I(Val*Weight/(High-100))+
I((Val-100)/Val)+
poly(Val/Weight,2)+
Val+Val:Count
),steps=5000)
summary(md)
Show(predict(md,data))
############################################################################################################
#Val+Val*Count с поправкой на группу
md=lm(SM~Val:Count:CountGroup+Val:CountGroup-1,data)
#md=lm(SM~Val:Count+Val-1,data,subset = data$Count<4)
md=step(md,
direction = "both",
scope = (~.+
Val:Body+
Val:Count:Body+
Val:Experience+
Val:AgeGroup:Experience+
Val:Count:Experience+
Val:Count:CountGroup:Body+
Val:CountGroup:Body+
I(Val*Count/Weight):CountGroup+
I(Val*Weight/(High-100))+
I((Val-100)/Val)+
poly(Val/Weight,2)+
Val+Val:Count
),steps=5000)
summary(md)
ShowErrors=function(model,power.coef=1,sum.coef=0){
Show(predict(model,data)*power.coef+sum.coef)
boot::cv.glm(data,md,K=5)
#cat("AIC =",AIC(model),"\n")
}
ShowErrors(md)
md=lm(SM~Val:Count:CountGroup+Val-1,data)
ShowErrors=function(model,power.coef=1,sum.coef=0){
Show(predict(model,data)*power.coef+sum.coef)
boot::cv.glm(data,md,K=5)$delta %>% print()
#cat("AIC =",AIC(model),"\n")
}
ShowErrors(md)
boot::cv.glm(data,glm(SM~Val+Val:Count,data),K=5)$delta %>% print()
glm(SM~Val+Val:Count,data)
glm(SM~Val+Val:Count,data=data)
boot::cv.glm(data,glm(SM~Val+Val:Count,data=data),K=5)$delta %>% print()
boot::cv.glm(data,glm(SM~Val+Val:Count:CountGroup,data=data),K=5)$delta %>% print()
boot::cv.glm(data,glm(SM~Val:CountGroup+Val:Count:CountGroup,data=data),K=5)$delta %>% print()
boot::cv.glm(data,glm(SM~Val:CountGroup+Val:Count:CountGroup-1,data=data),K=5)$delta %>% print()
View(md)
ShowErrors=function(model,power.coef=1,sum.coef=0){
Show(predict(model,data)*power.coef+sum.coef)
boot::cv.glm(data,glm(formula = md$call$formula,data=data),K=5)$delta %>% print()
#cat("AIC =",AIC(model),"\n")
}
ShowErrors(md)
ShowErrors=function(model,power.coef=1,sum.coef=0){
Show(predict(model,data)*power.coef+sum.coef)
cat("Оценки кросс-валидации",boot::cv.glm(data,glm(formula = md$call$formula,data=data),K=5)$delta,"\n")
#cat("AIC =",AIC(model),"\n")
}
ShowErrors(md)
############################################################################################################
#Val+Val*Count с поправкой на группу
md=lm(SM~Val:Count:CountGroup+Val:CountGroup-1,data)
ShowErrors(md)
md=lm(SM~Val:CountGroup:Count+Val:Type:Body-1,data)
ShowErrors(md)
#md=lm(SM~Val:Count+Val-1,data,subset = data$Count<4)
md=step(md,
direction = "both",
scope = (~.+
Val:Body+
Val:Count:Body+
Val:Experience+
Val:AgeGroup:Experience+
Val:Count:Experience+
Val:Count:CountGroup:Body+
Val:CountGroup:Body+
I(Val*Count/Weight):CountGroup+
I(Val*Weight/(High-100))+
I((Val-100)/Val)+
poly(Val/Weight,2)+
Val+Val:Count
),steps=5000)
md=lm(SM~Val+Val:Count-1+Val:Body:Count+Val:Experience:Count+
Val:Body+Val:Count:CountGroup+Val:CountGroup+#Val:Sex
Val:Experience+
I(Val*Weight/(High-100))+
I((Val-100)/Val)+poly(Val/Weight,2)
,data)
ShowErrors(md)
#md=lm(SM~Val:Count+Val-1,data,subset = data$Count<4)
md=step(md,
direction = "both",
scope = (~.+
Val:Body+
Val:Count:Body+
Val:Experience+
Val:AgeGroup:Experience+
Val:Count:Experience+
Val:Count:CountGroup:Body+
Val:CountGroup:Body+
I(Val*Count/Weight):CountGroup+
I(Val*Weight/(High-100))+
I((Val-100)/Val)+
poly(Val/Weight,2)+
Val+Val:Count
),steps=5000)
Show(predict(md,data))
ShowErrors(md)
pr=predict(md,data%>% select(Val,Count,Weight,High,Body,Sex,Experience,CountGroup), interval = "prediction", level = 0.95)
obj+
#geom_ribbon(aes(x=Val,ymin = pr[,2], ymax = pr[,3]), fill = "grey70") +
geom_line(aes(x=Val,y=pr[,1]),size=1,col="grey70",linetype="dotted")+
geom_point(aes(x=Val,y=pr[,1]),size=3)+
geom_point(aes(x=Val,y=SM,col=Body,shape=Type),size=4)+theme(legend.position = c(0.85,0.25))
qqPlot(md,main="Q-Q plot")
durbinWatsonTest(md)#тест на автокорреляцию
gvlma::gvlma(md) %>% summary()
vif(md)
par(mfrow=c(2,2))
plot(md)
par(mfrow=c(1,1))
outlierTest(md)
View(data)
View(data)
#оптимизация чисто коэффициента c поправкой на его группу
md=lm(I(SM/Val-1)~Val:Count:CountGroup-1,data)
summary(md)
############################################################################################################
#Val+Val*Count с поправкой на группу
md=lm(SM~Val:Count:CountGroup+Val:CountGroup-1,data)
#md=lm(SM~Val:Count+Val-1,data,subset = data$Count<4)
md=step(md,
direction = "both",
scope = (~.+
Val:Body+
Val:Count:Body+
Val:Experience+
Val:AgeGroup:Experience+
Val:Count:Experience+
Val:Count:CountGroup:Body+
Val:CountGroup:Body+
I(Val*Count/Weight):CountGroup+
I(Val*Weight/(High-100))+
I((Val-100)/Val)+
poly(Val/Weight,2)+
Val+Val:Count
),steps=5000)
ShowErrors(md)
summary(md)
md=lm(SM~Val:Count:CountGroup+Val:Body-1,data)
#md=lm(SM~Val:Count+Val-1,data,subset = data$Count<4)
md=step(md,
direction = "both",
scope = (~.+
Val:Body+
Val:Count:Body+
Val:Experience+
Val:AgeGroup:Experience+
Val:Count:Experience+
Val:Count:CountGroup:Body+
Val:CountGroup:Body+
I(Val*Count/Weight):CountGroup+
I(Val*Weight/(High-100))+
I((Val-100)/Val)+
poly(Val/Weight,2)+
Val+Val:Count
),steps=5000)
md=lm(SM~Val+Val:Count-1+Val:Body:Count+Val:Experience:Count+
Val:Body+Val:Count:CountGroup+Val:CountGroup+#Val:Sex
Val:Experience+
I(Val*Weight/(High-100))+
I((Val-100)/Val)+poly(Val/Weight,2)
,data)
#md=lm(SM~Val:Count+Val-1,data,subset = data$Count<4)
md=step(md,
direction = "both",
scope = (~.+
Val:Body+
Val:Count:Body+
Val:Experience+
Val:AgeGroup:Experience+
Val:Count:Experience+
Val:Count:CountGroup:Body+
Val:CountGroup:Body+
I(Val*Count/Weight):CountGroup+
I(Val*Weight/(High-100))+
I((Val-100)/Val)+
poly(Val/Weight,2)+
Val+Val:Count
),steps=5000)
#md=lm(SM~Val:Count+Val-1,data,subset = data$Count<4)
md=step(md,
direction = "both",
scope = (~.+
Val:Body+
Val:Count:Body+
Val:Experience+
Val:AgeGroup:Experience+
Val:Count:Experience+
Val:Count:CountGroup:Body+
Val:CountGroup:Body+
I(Val*Count/Weight):CountGroup+
I(Val*Weight/(High-100))+
I((Val-100)/Val)+
poly(Val/Weight,2)+
Val+Val:Count+
Val:Weight:Body
),steps=5000)
Show(predict(md,data))
ShowErrors(md)
warnings()
