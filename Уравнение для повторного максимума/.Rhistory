maxerror=2
#Функция ошибок####
Error=function(target,weight) (target-weight)^2 %>% mean() %>% sqrt()
Show=function(vals,df=data){
#vals=predict(model,df)
err=df$SM-vals
cbind(value=vals,Target=df$SM,Set=paste0(df$Val,"*",df$Count),
ERROR=abs(df$SM-vals),
ErrorPercent=abs(err)/df$SM*100,
df[,c(3:11)]) %>% tbl_df() %>% select(-Count)%>% arrange(-ERROR,-ErrorPercent,Weight) %>%
filter(ERROR>1)%>% print()
cat("\n")
rg=range(err)#;print(err);print(rg)
if(rg[1]<0)cat("------------> Наибольшая ошибка в большую сторону:",-rg[1],"\n")
if(rg[2]>0)cat("------------> Наибольшая ошибка в меньшую сторону:",rg[2],"\n")
s=sum(abs(err)/df$SM*100>maxerror)
len=length(err)
cat("Модель ошиблась более чем на",maxerror,"% в",s,"случаях из",len,"(",s/len*100,"%)\n")
s=sum(abs(err)>maxerror)
cat("Модель ошиблась более чем на",maxerror,"кг в",s,"случаях из",len,"(",s/len*100,"%)\n")
cat("-------------------> Среднеквадратичная ошибка:",Error(vals,df$SM),"\n")
}
ShowErrors=function(model,power.coef=1,sum.coef=0){
Show(predict(model,data)*power.coef+sum.coef)
cat("Оценки кросс-валидации",boot::cv.glm(data,glm(formula = md$call$formula,data=data),K=10)$delta,"\n")
#cat("AIC =",AIC(model),"\n")
}
md=lm(SM~Val:Count:CountGroup+Val:CountGroup-1,data)
summary(md)
Show(predict(md,data),data %>% filter(Count<11))
Show(predict(md,data)[data$Count>11],data %>% filter(Count<11))
Show(predict(md,data)[data$Count<11],data %>% filter(Count<11))
md=lm(SM~Val:CountGroup+Val:Count:CountGroup+Val:Weight-1,data)
Show(predict(md,data)[data$Count<11],data %>% filter(Count<11))
summary(md)
md=lm(SM~Val:CountGroup+Val:Count:CountGroup+I(Val/Weight)-1,data)
summary(md)
md=lm(SM~Val:CountGroup+Val:Count:CountGroup+I(Weight/Val)-1,data)
summary(md)
md=lm(SM~Val:CountGroup+Val:Count:CountGroup+I(Val^2/Weight)-1,data)
summary(md)
md=lm(SM~Val:CountGroup+Val:Count:CountGroup:I(Val^2/Weight)-1,data)
summary(md)
Show(predict(md,data)[data$Count<11],data %>% filter(Count<11))
md=lm(SM~Val:CountGroup+Val:Count:CountGroup:I(Val/Weight)-1,data)
summary(md)
Show(predict(md,data)[data$Count<11],data %>% filter(Count<11))
md=lm(SM~Val:CountGroup:I(Val/Weight)+Val:Count:CountGroup-1,data)
summary(md)
Show(predict(md,data)[data$Count<11],data %>% filter(Count<11))
md=lm(SM~Val:CountGroup+Val:Count:CountGroup-1+I(Val*(High-100)/Weight),data)
Show(predict(md,data)[data$Count<11],data %>% filter(Count<11))
md=lm(SM~Val:CountGroup+Val:Count:CountGroup-1+I(Val*(High-110)/Weight),data)
Show(predict(md,data)[data$Count<11],data %>% filter(Count<11))
md=lm(SM~Val:CountGroup+Val:Count:CountGroup-1+I(Val*(High-120)/Weight),data)
Show(predict(md,data)[data$Count<11],data %>% filter(Count<11))
md=lm(SM~Val:CountGroup+Val:Count:CountGroup-1+I(Val*(High-150)/Weight),data)
Show(predict(md,data)[data$Count<11],data %>% filter(Count<11))
md=lm(SM~Val:CountGroup+Val:Count:CountGroup-1+I(Val*(High-160)/Weight),data)
Show(predict(md,data)[data$Count<11],data %>% filter(Count<11))
md=lm(SM~Val:CountGroup+Val:Count:CountGroup-1+I(Val*(High-140)/Weight),data)
Show(predict(md,data)[data$Count<11],data %>% filter(Count<11))
Show(predict(md,data)[data$Count<11],data %>% filter(Count<11))
md=lm(SM~Val:CountGroup+Val:Count:CountGroup-1+I(Val*(High-130)/Weight),data)
Show(predict(md,data)[data$Count<11],data %>% filter(Count<11))
md=lm(SM~Val:CountGroup+Val:Count:CountGroup-1+I(Val*(High-120)/Weight),data)
Show(predict(md,data)[data$Count<11],data %>% filter(Count<11))
md=lm(SM~Val:CountGroup+Val:Count:CountGroup-1+I(Val*(High-100)/Weight),data)
Show(predict(md,data)[data$Count<11],data %>% filter(Count<11))
md=lm(SM~Val:CountGroup+Val:Count:CountGroup-1+I((High-120)/Weight),data)
Show(predict(md,data)[data$Count<11],data %>% filter(Count<11))
(data$High-120)/data$Weight
shapiro.test((data$High-120)/data$Weight)
md=lm(SM~Val:CountGroup+Val:Count:CountGroup-1+I(Val*(High-120)/Weight):Count:CountGroup,data)
Show(predict(md,data)[data$Count<11],data %>% filter(Count<11))
md=lm(SM~Val:CountGroup+Val:Count:CountGroup-1+I(Val*(High-120)/Weight):CountGroup,data)
Show(predict(md,data)[data$Count<11],data %>% filter(Count<11))
md=lm(SM~Val:CountGroup+Val:Count:CountGroup-1+I(Val*(High-120)/Weight):Count,data)
Show(predict(md,data)[data$Count<11],data %>% filter(Count<11))
md=lm(SM~Val:CountGroup+Val:Count:CountGroup:I((High-120)/Weight)-1,data)
Show(predict(md,data)[data$Count<11],data %>% filter(Count<11))
md=lm(SM~Val:CountGroup+Val:Count:CountGroup+I((High-120)/Weight):Count:CountGroup-1,data)
Show(predict(md,data)[data$Count<11],data %>% filter(Count<11))
View(data)
Show(predict(md,data))
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
#library(DAAG)
library(leaps)
data=read_tsv("data.tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","SM","Val","Count","Type","Sex","Experience","Age","Weight","High","Body","Mail")
data %<>%filter(Count<=20) %>% arrange(Val,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T)
)%>% select(-Date)#,-Mail) %>% filter(Count>1,Val<SM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20")#,">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
View(data)
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
#library(DAAG)
library(leaps)
data=read_tsv("data.tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","SM","Val","Count","Type","Sex","Experience","Age","Weight","High","Body","Mail")
data %<>%filter(Count<=20) %>% arrange(Val,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T)
)%>% select(-Date)#,-Mail) %>% filter(Count>1,Val<SM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20")#,">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
############################################################################################################
#Val+Val*Count с поправкой на группу
md=lm(SM~Val:Count:CountGroup+Val:CountGroup-1,data)
summary(md)
ShowErrors(md)
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
#library(DAAG)
library(leaps)
data=read_tsv("data.tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","SM","Val","Count","Type","Sex","Experience","Age","Weight","High","Body","Mail")
data %<>%#filter(Count<=20) %>%
arrange(Val,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T)
)%>% select(-Date)#,-Mail) %>% filter(Count>1,Val<SM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20",">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
View(data)
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
#library(DAAG)
library(leaps)
data=read_tsv("data.tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","SM","Val","Count","Type","Sex","Experience","Age","Weight","High","Body","Mail")
data %<>%#filter(Count<=20) %>%
arrange(Val,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20,40)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T)
)%>% select(-Date)#,-Mail) %>% filter(Count>1,Val<SM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20",">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
summary(data)
getparam=function(vec){
ln=length(levels(vec))
x=numeric(ln)
ns=character(ln)
for(i in seq(ln)){
x[i]=sum(vec==levels(vec)[i])/length(vec)
ns[i]=paste0(levels(vec)[i]," (",round(x[i]*100,2),"%)")
}
return(list(x=x,ns=ns))
}
data$Count %>% as.numeric()
data$CountGroup %>% as.numeric()
View(data)
cor(data$SM[gr<2],data$Val[gr<2])
gr=data$CountGroup %>% as.numeric()
cor(data$SM[gr<2],data$Val[gr<2])
cors=function(inds)cor(data$SM[inds],data$Val[inds])
cors(gr<2)
cors(gr==2)
cors(gr==3)
cors(gr==4)
cors(gr==5)
lm(SM~Val:factor(Count)-1,data)
lm(SM~Val:factor(Count)-1,data) %>% summary()
coef(m)
coefficients(m)
m=lm(SM~Val:factor(Count)-1,data)
coefficients(m)
coefficients(m)[1:7] %>% plot()
coefficients(m)[1:8] %>% plot()
coefficients(m)[1:7] %>% plot()
plot(function(x)1/(1+exp(-x)))
plot(function(x)1/(1+exp(-x)),begin=-10,end=100)
plot(seq(-10,10,50) %>% map_dbl(function(x)1/(1+exp(-x))) )
plot(seq(-10,10,length.out=50) %>% map_dbl(function(x)1/(1+exp(-x))) )
plot(seq(-10,10,length.out=50) %>% map_dbl(function(x)1/(1+exp(-x))) )
plot(seq(-10,10,length.out=50) %>% map_dbl(function(x)1/(1+exp(-x))) )
coefficients(m)[1:7] %>% plot()
sigma=nls(v~a+b/(1+exp(-k*n)),
data=data.frame(v=coefficients(m)[1:7],n=1:7),
start = list(a=0,b=1,k=1))
sigma=nls(v~1+b/(1+exp(-k*n)),
data=data.frame(v=coefficients(m)[1:7],n=1:7),
start = list(b=1,k=1))
sigma=nls(v~1+b/(1+exp(-k*n)),
data=data.frame(v=coefficients(m)[1:7],n=1:7),
start = list(b=0.3,k=1))
sigma=nls(v~1+b/(1+exp(-k*n)),
data=data.frame(v=coefficients(m)[1:7],n=1:7),
start = list(b=0.3,k=10))
sigma=nls(v~1+b/(1+exp(-k*n)),
data=data.frame(v=coefficients(m)[1:7],n=1:7),
start = list(b=0.3,k=1))
coefficients(m)[1:7] %>% plot(type="b")
cf=coefficients(m)[1:7]
cf
(1+sqrt(5))/2
fi=(1+sqrt(5))/2
fi/cf
cf/fi
sqrt(fi)
coefficients(m)[1:7] %>% plot(x=2:8,type="b")
cf-cf[4]
# а что если там квадратичная зависимость от 2 до 6?
m=lm(SM~Val:I(Count^2)-1,data)
m%>% summary()
# а что если там квадратичная зависимость от 2 до 6?
m=lm(SM~Val:I(Count^2)-1,data %>% filter(Count<7))
m%>% summary()
# а что если там квадратичная зависимость от 2 до 6?
m=lm(SM~Val:poly(Count,2)-1,data %>% filter(Count<7))
m%>% summary()
# а что если там квадратичная зависимость от 2 до 6?
m=lm(SM~Val:I((Count-1)^2)-1,data %>% filter(Count<7))
m%>% summary()
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
#library(DAAG)
library(leaps)
data=read_tsv("data.tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","SM","Val","Count","Type","Sex","Experience","Age","Weight","High","Body","Mail")
data %<>%#filter(Count<=20) %>%
arrange(Val,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20,40)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T)
)%>% select(-Date)#,-Mail) %>% filter(Count>1,Val<SM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20",">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
data %>% ggplot(aes(x=factor(Count),y=SM/Val))+geom_boxplot()+theme_bw()
data %>% ggplot(aes(x=factor(Count),y=SM/Val/Count))+geom_boxplot()+theme_bw()
data %>% ggplot(aes(x=CountGroup,y=SM/Val))+geom_boxplot()+theme_bw()
data %>% ggplot(aes(x=factor(Count),y=SM/Val))+geom_boxplot()+theme_bw()
data %>% ggplot(aes(x=factor(Count),y=SM/Val-1))+geom_boxplot()+theme_bw()
#data %>% ggplot(aes(x=CountGroup,y=SM/Val))+geom_boxplot()+theme_bw()
data %>% ggplot(aes(x=factor(Count),y=(SM/Val-1)/Count))+geom_boxplot()+theme_bw()
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
#library(DAAG)
library(leaps)
data=read_tsv("data.tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","SM","Val","Count","Type","Sex","Experience","Age","Weight","High","Body","Mail")
data %<>%#filter(Count<=20) %>%
arrange(Val,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20,40)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T)
)%>% select(-Date)#,-Mail) %>% filter(Count>1,Val<SM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20",">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
data %$% Weight/(High-150)
View(data)
data$Weight/(data$High-150)
density(data$Weight/(data$High-150))
densityPlot(data$Weight/(data$High-150))
hist(data$Weight/(data$High-150))
densityPlot(data$Weight/(data$High-150))
densityPlot(data$Weight/(data$High-150),n=100)
densityPlot(data$Weight/(data$High-150),n=10)
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
#library(DAAG)
library(leaps)
data=read_tsv("data.tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","SM","Val","Count","Type","Sex","Experience","Age","Weight","High","Body","Mail")
data %<>%#filter(Count<=20) %>%
arrange(Val,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20,40)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T),
Constitute=Weight/(High-150)
)%>% select(-Date)#,-Mail) %>% filter(Count>1,Val<SM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20",">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
View(data)
densityPlot(data$Weight/data$High)
data$Weight/data$High
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
#library(DAAG)
library(leaps)
data=read_tsv("data.tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","SM","Val","Count","Type","Sex","Experience","Age","Weight","High","Body","Mail")
data %<>%#filter(Count<=20) %>%
arrange(Val,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20,40)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T),
Constitute=Weight/(High-100)
)%>% select(-Date)#,-Mail) %>% filter(Count>1,Val<SM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20",">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
View(data)
ggplot(data,aes(x=Body,y=Constitute))+geom_boxplot()
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
#library(DAAG)
library(leaps)
data=read_tsv("data.tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","SM","Val","Count","Type","Sex","Experience","Age","Weight","High","Body","Mail")
data %<>%#filter(Count<=20) %>%
arrange(Val,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20,40)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T),
Index=Weight/(0.01*High)^2,
IndexGroup=cut(Index,breaks = c(0,18.5,25,30,35,40))
)%>% select(-Date)#,-Mail) %>% filter(Count>1,Val<SM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20",">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
summary(data)
View(data)
#Загрузка данных####
library(tidyverse)
library(magrittr)
library(ggformula)
library(ggthemes)
library(tidyquant)
library(ggvis)
library(plotrix)
library(car)
#library(DAAG)
library(leaps)
data=read_tsv("data.tsv",
skip=1,col_names = F,na="",
col_types = "fddnfffnnnff",
comment="#"
) %>% tbl_df()
colnames(data)=c("Date","SM","Val","Count","Type","Sex","Experience","Age","Weight","High","Body","Mail")
data %<>%#filter(Count<=20) %>%
arrange(Val,Count,Weight) %>%  mutate(
CountGroup=cut(Count,breaks = c(1,3,6,10,20,40)),
AgeGroup=cut(Age,breaks = c(1,19,27,35,70)),
Experience=factor(Experience,levels = c("До двух лет","2-3 года","4-5 лет","6-10 лет","11-15 лет" ,"больше 15 лет"),ordered = T),
Index=Weight/(0.01*High)^2,
IndexGroup=cut(Index,breaks = c(0,16,18.5,24.99,30,35,40,60))
)%>% select(-Date)#,-Mail) %>% filter(Count>1,Val<SM)
levels(data$CountGroup)=c("2-3","4-6","7-10","11-20",">20")
levels(data$AgeGroup)=c("<20","20-27","28-35",">35")
levels(data$IndexGroup)=c("выраженный дефицит","дефицит","норма","избыток","ожирение1","ожирение2","ожирение3")
ex=data$Experience %>% as.numeric()
ex[ex==6]=5
ex %<>%factor()
levels(ex)=c("До двух лет","2-3 года","4-5 лет","6-10 лет","больше 10 лет")
data %<>%mutate(Experience=factor(ex,ordered = T))
allrows=1:nrow(data)
maxerror=2
summary(data)
data %$%  table(Body,IndexGroup)
GGally::ggpairs(data%>% select(-Count),title="Диаграмы взаимодействий между переменными в выборке",
lower = list(continuous = "smooth_loess", combo = "box"))
GGally::ggpairs(data%>% select(-Count,-Mail),title="Диаграмы взаимодействий между переменными в выборке",
lower = list(continuous = "smooth_loess", combo = "box"))
data %>% ggplot(aes(x=Val,y=SM,col=CountGroup))+geom_line()+geom_smooth()+theme_bw()
data %>% ggplot(aes(x=Val,y=SM,col=CountGroup))+geom_point()+geom_smooth()+theme_bw()
data %>% ggplot(aes(x=Val,y=SM))+geom_point(aes(col=CountGroup),size=2)+geom_smooth()+theme_bw()
data %>% ggplot(aes(x=Val,y=SM))+geom_smooth()+geom_point(aes(col=CountGroup),size=3)+theme_bw()
